# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]

jobs:
  Macbuild:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
      
    - name: Get latest release
      id: latest_release
      uses: actions/github-script@v7
      with:
        script: |
          #const gith = github(core.getInput('GITHUB_TOKEN'));
          const releases = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          const latestRelease = releases.data[0];
          return latestRelease.id;
    - name: Upload binary to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         upload_url: https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.latest_release.outputs.result }}
         asset_path: ./ustPasser.dylib
         asset_name: ustPasser.dylib
         asset_content_type: application/octet-stream
      
  Winbuild:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Get latest release
      id: latest_release
      uses: actions/github-script@v7
      with:
        script: |
          #const gith = github(core.getInput('GITHUB_TOKEN'));
          const releases = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          const latestRelease = releases.data[0];
          return latestRelease.id;
    - name: Upload binary to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         upload_url: https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.latest_release.outputs.result }}
         asset_path: ./ustPasser.dll
         asset_name: ustPasser.dll
         asset_content_type: application/octet-stream
  Ububuild:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Get latest release
      id: latest_release
      uses: actions/github-script@v7
      with:
        script: |
          #const gith = github(core.getInput('GITHUB_TOKEN'));
          const releases = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          const latestRelease = releases.data[0];
          return latestRelease.id;
    - name: Upload binary to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         upload_url: https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.latest_release.outputs.result }}
         asset_path: ./ustPasser.so
         asset_name: ustPasser.so
         asset_content_type: application/octet-stream
