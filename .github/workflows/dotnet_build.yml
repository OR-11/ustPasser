# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET-Builder

on:
  release: 
    types:[published]
  #push:
    #branches: [ "master" ]

jobs:
  #Macbuild:
  #  runs-on: macos-latest
  #
  #  steps:
  #  - uses: actions/checkout@v3
  #  - name: Setup .NET
  #    uses: actions/setup-dotnet@v3
  #    with:
  #      dotnet-version: 5.0.x
  #  - name: Restore dependencies
  #    run: dotnet restore
  #  - name: Build
  #    run: dotnet build --no-restore
  #  - name: Test
  #    run: dotnet test --no-build --verbosity normal
  #    
  #  - name: Get latest release
  #    id: latest_release
  #    env: 
  #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #      upload_url: https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.latest_release.outputs.id }}
  #      asset_path: ./bin/Debug/net5.0/ustPasser.dll
  #      asset_name: ustPasser.dll
  #    run: |
  #      echo "id=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{env.GITHUB_TOKEN}}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/releases/latest | jq .id)" >> $GITHUB_OUTPUT
  #    
  #  - name: Upload binary to release
  #    env: 
  #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #      upload_url: https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.latest_release.outputs.id }}
  #      asset_path: ./bin/Debug/net5.0/ustPasser.dll
  #      asset_name: ustPasser.dll
  #    run: |
  #      cd ./bin/Debug/net5.0
  #      curl -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{env.GITHUB_TOKEN}}" -H "X-GitHub-Api-Version: 2022-11-28" -H "Content-Type: application/octet-stream" "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.latest_release.outputs.id }}/assets?name=ustPasser.dll" --data-binary "@ustPasser.dll"
  #    
  #Winbuild:
  #  runs-on: windows-latest
  #
  #  steps:
  #  - uses: actions/checkout@v3
  #  - name: Setup .NET
  #    uses: actions/setup-dotnet@v3
  #    with:
  #      dotnet-version: 5.0.x
  #  - name: Restore dependencies
  #    run: dotnet restore
  #  - name: Build
  #    run: dotnet build --no-restore
  #  - name: Test
  #    run: dotnet test --no-build --verbosity normal
  #
  #  - name: Get latest release
  #    id: latest_release
  #    env: 
  #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #      upload_url: https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.latest_release.outputs.id }}
  #      asset_path: ./bin/Debug/net5.0/ustPasser.dll
  #      asset_name: ustPasser.dll
  #    run: |
  #      echo "id=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{env.GITHUB_TOKEN}}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/releases/latest | jq .id)" >> $GITHUB_OUTPUT
  #    
  #  - name: Upload binary to release
  #    env: 
  #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #      upload_url: https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.latest_release.outputs.id }}
  #      asset_path: ./bin/Debug/net5.0/ustPasser.dll
  #      asset_name: ustPasser.dll
  #    run: |
  #      cd ./bin/Debug/net5.0
  #      curl -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{env.GITHUB_TOKEN}}" -H "X-GitHub-Api-Version: 2022-11-28" -H "Content-Type: application/octet-stream" "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.latest_release.outputs.id }}/assets?name=ustPasser.dll" --data-binary "@ustPasser.dll"
  #    
  Ububuild:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Get latest release
      id: latest_release
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        upload_url: https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.latest_release.outputs.id }}
        asset_path: ./bin/Debug/net5.0/ustPasser.dll
        asset_name: ustPasser.dll
      run: |
        echo "id=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{env.GITHUB_TOKEN}}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/releases/latest | jq .id)" >> $GITHUB_OUTPUT
      
    - name: Upload binary to release
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        upload_url: https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.latest_release.outputs.id }}
        asset_path: ./bin/Debug/net5.0/ustPasser.dll
        asset_name: ustPasser.dll
      run: |
        cd ./bin/Debug/net5.0
        curl -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{env.GITHUB_TOKEN}}" -H "X-GitHub-Api-Version: 2022-11-28" -H "Content-Type: application/octet-stream" "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.latest_release.outputs.id }}/assets?name=ustPasser.dll" --data-binary "@ustPasser.dll"
      
